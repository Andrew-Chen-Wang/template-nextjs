/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely"

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>

export type Timestamp = ColumnType<Date, Date | string, Date | string>

export interface Account {
  accessToken: string | null
  expiresAt: Int8 | null
  id: string
  idToken: string | null
  provider: string
  providerAccountId: string
  refreshToken: string | null
  scope: string | null
  sessionState: string | null
  tokenType: string | null
  type: string
  userId: string
}

export interface Session {
  expires: Timestamp
  sessionKey: string
  userId: string
}

export interface User {
  createdAt: Generated<Timestamp>
  email: string
  id: string
  image: string | null
  isAdmin: Generated<boolean>
  name: string | null
}

export interface DB {
  account: Account
  session: Session
  user: User
}
